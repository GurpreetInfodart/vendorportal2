//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VendorPortal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VendorPortalEntities : DbContext
    {
        public VendorPortalEntities()
            : base("name=VendorPortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<INVOICE> INVOICEs { get; set; }
        public virtual DbSet<INVOICE_DETAILS> INVOICE_DETAILS { get; set; }
        public virtual DbSet<Plant_Master> Plant_Master { get; set; }
        public virtual DbSet<PO> POes { get; set; }
        public virtual DbSet<PO_DETAILS> PO_DETAILS { get; set; }
        public virtual DbSet<PublicHoliday> PublicHolidays { get; set; }
        public virtual DbSet<Schedule> Schedules { get; set; }
        public virtual DbSet<STATE_MST> STATE_MST { get; set; }
        public virtual DbSet<SUPPLIER_MASTER> SUPPLIER_MASTER { get; set; }
        public virtual DbSet<tblApprovedPackingStandard> tblApprovedPackingStandards { get; set; }
        public virtual DbSet<tblCertificate> tblCertificates { get; set; }
        public virtual DbSet<tblCity> tblCities { get; set; }
        public virtual DbSet<tblECN> tblECNs { get; set; }
        public virtual DbSet<tblFileMetaData> tblFileMetaDatas { get; set; }
        public virtual DbSet<tblFOC> tblFOCs { get; set; }
        public virtual DbSet<tblGRN> tblGRNs { get; set; }
        public virtual DbSet<tblInvoiceRejecttion> tblInvoiceRejecttions { get; set; }
        public virtual DbSet<tblLineStopage> tblLineStopages { get; set; }
        public virtual DbSet<tblMaterial> tblMaterials { get; set; }
        public virtual DbSet<tblNotification> tblNotifications { get; set; }
        public virtual DbSet<tblPPM> tblPPMs { get; set; }
        public virtual DbSet<tblRating> tblRatings { get; set; }
        public virtual DbSet<tblStock> tblStocks { get; set; }
        public virtual DbSet<tblUnit> tblUnits { get; set; }
        public virtual DbSet<tblVendorInfo> tblVendorInfoes { get; set; }
        public virtual DbSet<tblVendorQue> tblVendorQues { get; set; }
        public virtual DbSet<tblWarrantyPartsRejected> tblWarrantyPartsRejecteds { get; set; }
        public virtual DbSet<VENDOR_ASSOC> VENDOR_ASSOC { get; set; }
        public virtual DbSet<BASIC_MST> BASIC_MST { get; set; }
        public virtual DbSet<PO_MASTER> PO_MASTER { get; set; }
        public virtual DbSet<PO_SCHEDULE_DTLS> PO_SCHEDULE_DTLS { get; set; }
        public virtual DbSet<tblUserRole> tblUserRoles { get; set; }
        public virtual DbSet<POList> POLists { get; set; }
        public virtual DbSet<Schedule1> Schedules1 { get; set; }
    
        public virtual ObjectResult<Nullable<long>> CheckApprovedId(string sUPP_CODE)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("CheckApprovedId", sUPP_CODEParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> CheckPendingId(string sUPP_CODE)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("CheckPendingId", sUPP_CODEParameter);
        }
    
        public virtual ObjectResult<GetAdminNotification_Result> GetAdminNotification()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminNotification_Result>("GetAdminNotification");
        }
    
        public virtual ObjectResult<GetAllSuplierFOC_Result> GetAllSuplierFOC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierFOC_Result>("GetAllSuplierFOC");
        }
    
        public virtual ObjectResult<GetAllSuplierFourM_Result> GetAllSuplierFourM(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierFourM_Result>("GetAllSuplierFourM", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetAllSuplierLineStoppage_Result> GetAllSuplierLineStoppage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierLineStoppage_Result>("GetAllSuplierLineStoppage");
        }
    
        public virtual ObjectResult<GetAllSuplierPPM_Result> GetAllSuplierPPM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierPPM_Result>("GetAllSuplierPPM");
        }
    
        public virtual ObjectResult<GetAllSuplierQM_Result> GetAllSuplierQM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierQM_Result>("GetAllSuplierQM");
        }
    
        public virtual ObjectResult<GetAllSuplierRating_Result> GetAllSuplierRating()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierRating_Result>("GetAllSuplierRating");
        }
    
        public virtual ObjectResult<GetAllSuplierSMIR_Result> GetAllSuplierSMIR(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierSMIR_Result>("GetAllSuplierSMIR", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetAllSuplierWarranty_Result> GetAllSuplierWarranty()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSuplierWarranty_Result>("GetAllSuplierWarranty");
        }
    
        public virtual ObjectResult<GetAllSupplierAdmin_Result> GetAllSupplierAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSupplierAdmin_Result>("GetAllSupplierAdmin");
        }
    
        public virtual ObjectResult<GetAllSupplierECN_Result> GetAllSupplierECN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSupplierECN_Result>("GetAllSupplierECN");
        }
    
        public virtual ObjectResult<GetAllVendor_Result> GetAllVendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllVendor_Result>("GetAllVendor");
        }
    
        public virtual ObjectResult<GetAllVendorAdmin_Result> GetAllVendorAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllVendorAdmin_Result>("GetAllVendorAdmin");
        }
    
        public virtual ObjectResult<GetAllVendorSupplier_Result> GetAllVendorSupplier(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllVendorSupplier_Result>("GetAllVendorSupplier", supplierNameParameter);
        }
    
        public virtual ObjectResult<GetHoliday_Result> GetHoliday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHoliday_Result>("GetHoliday");
        }
    
        public virtual ObjectResult<Nullable<int>> getid(string sUPP_CODE)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getid", sUPP_CODEParameter);
        }
    
        public virtual ObjectResult<GetInvoiceForBuyer_Supplier_Result> GetInvoiceForBuyer_Supplier(string userType, Nullable<int> currentPage, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInvoiceForBuyer_Supplier_Result>("GetInvoiceForBuyer_Supplier", userTypeParameter, currentPageParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<GetInvoiceForBuyer_Supplier_Test_Result> GetInvoiceForBuyer_Supplier_Test(string userType)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInvoiceForBuyer_Supplier_Test_Result>("GetInvoiceForBuyer_Supplier_Test", userTypeParameter);
        }
    
        public virtual int GetInvoiceForBuyer_Supplier_TotalCount(string userType, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetInvoiceForBuyer_Supplier_TotalCount", userTypeParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<GetPOList_Result> GetPOList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPOList_Result>("GetPOList");
        }
    
        public virtual ObjectResult<GetPreDispatchTemplate_Result> GetPreDispatchTemplate(string supplierName, string date)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPreDispatchTemplate_Result>("GetPreDispatchTemplate", supplierNameParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetSuplier_Result> GetSuplier(string sUPP_CODE)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplier_Result>("GetSuplier", sUPP_CODEParameter);
        }
    
        public virtual ObjectResult<GetSuplierCapacity_Result> GetSuplierCapacity(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierCapacity_Result>("GetSuplierCapacity", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierFOC_Result> GetSuplierFOC(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierFOC_Result>("GetSuplierFOC", supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierFornight_Result> GetSuplierFornight(string supplierName, Nullable<int> currentPage)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierFornight_Result>("GetSuplierFornight", supplierNameParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<GetSuplierFornightTOP6_Result> GetSuplierFornightTOP6(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierFornightTOP6_Result>("GetSuplierFornightTOP6", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierForUploadPackingBySupplier_Result> GetSuplierForUploadPackingBySupplier(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierForUploadPackingBySupplier_Result>("GetSuplierForUploadPackingBySupplier", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierForUploadPackingStandard_Result> GetSuplierForUploadPackingStandard(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierForUploadPackingStandard_Result>("GetSuplierForUploadPackingStandard", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierFourM_Result> GetSuplierFourM(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierFourM_Result>("GetSuplierFourM", supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierFourMTop3_Result> GetSuplierFourMTop3(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierFourMTop3_Result>("GetSuplierFourMTop3", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierKIT_Result> GetSuplierKIT(string supplierName, Nullable<int> currentPage)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierKIT_Result>("GetSuplierKIT", supplierNameParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<GetSuplierKITTOP3_Result> GetSuplierKITTOP3(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierKITTOP3_Result>("GetSuplierKITTOP3", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierLineStoppage_Result> GetSuplierLineStoppage(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierLineStoppage_Result>("GetSuplierLineStoppage", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierNotification_Result> GetSuplierNotification(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierNotification_Result>("GetSuplierNotification", supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierPPM_Result> GetSuplierPPM(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierPPM_Result>("GetSuplierPPM", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierPreDispatch_Result> GetSuplierPreDispatch(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierPreDispatch_Result>("GetSuplierPreDispatch", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierQM_Result> GetSuplierQM(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierQM_Result>("GetSuplierQM", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierQuality_Result> GetSuplierQuality(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierQuality_Result>("GetSuplierQuality", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierQualitycer_Result> GetSuplierQualitycer(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierQualitycer_Result>("GetSuplierQualitycer", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierRating_Result> GetSuplierRating(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierRating_Result>("GetSuplierRating", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierSMIR_Result> GetSuplierSMIR(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierSMIR_Result>("GetSuplierSMIR", supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierSMIRTop3_Result> GetSuplierSMIRTop3(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierSMIRTop3_Result>("GetSuplierSMIRTop3", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierSourcing_Result> GetSuplierSourcing(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierSourcing_Result>("GetSuplierSourcing", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSuplierWarranty_Result> GetSuplierWarranty(Nullable<int> currentPage, string supplierName)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuplierWarranty_Result>("GetSuplierWarranty", currentPageParameter, supplierNameParameter);
        }
    
        public virtual ObjectResult<GetSupplierECN_Result> GetSupplierECN(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSupplierECN_Result>("GetSupplierECN", supplierNameParameter);
        }
    
        public virtual ObjectResult<string> GetSupplierName(string sUPP_CODE)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSupplierName", sUPP_CODEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsBSLGoNo(Nullable<long> id, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsBSLGoNo", idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsCertificate1File(Nullable<long> id, string type, string file, string loc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("Loc", loc) :
                new ObjectParameter("Loc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsCertificate1File", idParameter, typeParameter, fileParameter, locParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsECNFile(Nullable<long> id, string type, string file, string loc)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("Loc", loc) :
                new ObjectParameter("Loc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsECNFile", idParameter, typeParameter, fileParameter, locParameter);
        }
    
        public virtual int InsFOC(string pXMLString, ObjectParameter eRROR)
        {
            var pXMLStringParameter = pXMLString != null ?
                new ObjectParameter("pXMLString", pXMLString) :
                new ObjectParameter("pXMLString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsFOC", pXMLStringParameter, eRROR);
        }
    
        public virtual int InsLineStoppage(string pXMLString, ObjectParameter eRROR)
        {
            var pXMLStringParameter = pXMLString != null ?
                new ObjectParameter("pXMLString", pXMLString) :
                new ObjectParameter("pXMLString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsLineStoppage", pXMLStringParameter, eRROR);
        }
    
        public virtual ObjectResult<Nullable<int>> InsNextMonthRecordsFOC(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsNextMonthRecordsFOC", idParameter);
        }
    
        public virtual int InsPPM(string pXMLString, ObjectParameter eRROR)
        {
            var pXMLStringParameter = pXMLString != null ?
                new ObjectParameter("pXMLString", pXMLString) :
                new ObjectParameter("pXMLString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsPPM", pXMLStringParameter, eRROR);
        }
    
        public virtual int InsRating(string pXMLString, ObjectParameter eRROR)
        {
            var pXMLStringParameter = pXMLString != null ?
                new ObjectParameter("pXMLString", pXMLString) :
                new ObjectParameter("pXMLString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsRating", pXMLStringParameter, eRROR);
        }
    
        public virtual int InsWarranty(string pXMLString, ObjectParameter eRROR)
        {
            var pXMLStringParameter = pXMLString != null ?
                new ObjectParameter("pXMLString", pXMLString) :
                new ObjectParameter("pXMLString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsWarranty", pXMLStringParameter, eRROR);
        }
    
        public virtual ObjectResult<PLANT_Result> PLANT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PLANT_Result>("PLANT");
        }
    
        public virtual ObjectResult<string> Sp_GenerateStock(string pONO, string sUPPLIERCODE, string sUPPLIERNAME, string mATERIALCODE, string mATERIALDESCRIPTION, string rAWMATERIAL, string uOM, string wIP, string wIPUOM, string fINISHGOODS, string fINISHGOODSUOM, string rEMARK, Nullable<System.DateTime> pODATE, string cREATEDBY)
        {
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var sUPPLIERCODEParameter = sUPPLIERCODE != null ?
                new ObjectParameter("SUPPLIERCODE", sUPPLIERCODE) :
                new ObjectParameter("SUPPLIERCODE", typeof(string));
    
            var sUPPLIERNAMEParameter = sUPPLIERNAME != null ?
                new ObjectParameter("SUPPLIERNAME", sUPPLIERNAME) :
                new ObjectParameter("SUPPLIERNAME", typeof(string));
    
            var mATERIALCODEParameter = mATERIALCODE != null ?
                new ObjectParameter("MATERIALCODE", mATERIALCODE) :
                new ObjectParameter("MATERIALCODE", typeof(string));
    
            var mATERIALDESCRIPTIONParameter = mATERIALDESCRIPTION != null ?
                new ObjectParameter("MATERIALDESCRIPTION", mATERIALDESCRIPTION) :
                new ObjectParameter("MATERIALDESCRIPTION", typeof(string));
    
            var rAWMATERIALParameter = rAWMATERIAL != null ?
                new ObjectParameter("RAWMATERIAL", rAWMATERIAL) :
                new ObjectParameter("RAWMATERIAL", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var wIPParameter = wIP != null ?
                new ObjectParameter("WIP", wIP) :
                new ObjectParameter("WIP", typeof(string));
    
            var wIPUOMParameter = wIPUOM != null ?
                new ObjectParameter("WIPUOM", wIPUOM) :
                new ObjectParameter("WIPUOM", typeof(string));
    
            var fINISHGOODSParameter = fINISHGOODS != null ?
                new ObjectParameter("FINISHGOODS", fINISHGOODS) :
                new ObjectParameter("FINISHGOODS", typeof(string));
    
            var fINISHGOODSUOMParameter = fINISHGOODSUOM != null ?
                new ObjectParameter("FINISHGOODSUOM", fINISHGOODSUOM) :
                new ObjectParameter("FINISHGOODSUOM", typeof(string));
    
            var rEMARKParameter = rEMARK != null ?
                new ObjectParameter("REMARK", rEMARK) :
                new ObjectParameter("REMARK", typeof(string));
    
            var pODATEParameter = pODATE.HasValue ?
                new ObjectParameter("PODATE", pODATE) :
                new ObjectParameter("PODATE", typeof(System.DateTime));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_GenerateStock", pONOParameter, sUPPLIERCODEParameter, sUPPLIERNAMEParameter, mATERIALCODEParameter, mATERIALDESCRIPTIONParameter, rAWMATERIALParameter, uOMParameter, wIPParameter, wIPUOMParameter, fINISHGOODSParameter, fINISHGOODSUOMParameter, rEMARKParameter, pODATEParameter, cREATEDBYParameter);
        }
    
        public virtual ObjectResult<Sp_GetMaterialData_Result> Sp_GetMaterialData(string userID, string pONO)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetMaterialData_Result>("Sp_GetMaterialData", userIDParameter, pONOParameter);
        }
    
        public virtual ObjectResult<Sp_GetMaterialDataManual_Result> Sp_GetMaterialDataManual(string userID, string pONO)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetMaterialDataManual_Result>("Sp_GetMaterialDataManual", userIDParameter, pONOParameter);
        }
    
        public virtual int SP_PO_Change_Status(string pO_NUM, string sTATUS)
        {
            var pO_NUMParameter = pO_NUM != null ?
                new ObjectParameter("PO_NUM", pO_NUM) :
                new ObjectParameter("PO_NUM", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PO_Change_Status", pO_NUMParameter, sTATUSParameter);
        }
    
        public virtual ObjectResult<string> SP_PODUPLICATE(string pONO)
        {
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_PODUPLICATE", pONOParameter);
        }
    
        public virtual int SP_SchedulevsDelivery(string vendorcode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
        {
            var vendorcodeParameter = vendorcode != null ?
                new ObjectParameter("vendorcode", vendorcode) :
                new ObjectParameter("vendorcode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SchedulevsDelivery", vendorcodeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Sp_StockReport_Result> Sp_StockReport(string userID, Nullable<System.DateTime> cREATEDON)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var cREATEDONParameter = cREATEDON.HasValue ?
                new ObjectParameter("CREATEDON", cREATEDON) :
                new ObjectParameter("CREATEDON", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_StockReport_Result>("Sp_StockReport", userIDParameter, cREATEDONParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Sp_StockRpt(string userID)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Sp_StockRpt", userIDParameter);
        }
    
        public virtual ObjectResult<string> SPStockUpload(string pONO, string sUPPLIERCODE, string sUPPLIERNAME, string mATERIALCODE, string mATERIALDESCRIPTION, string rAWMATERIAL, string uOM, string wIP, string wIPUOM, string fINISHGOODS, string fINISHGOODSUOM, string rEMARK, Nullable<System.DateTime> pODATE, string cREATEDBY)
        {
            var pONOParameter = pONO != null ?
                new ObjectParameter("PONO", pONO) :
                new ObjectParameter("PONO", typeof(string));
    
            var sUPPLIERCODEParameter = sUPPLIERCODE != null ?
                new ObjectParameter("SUPPLIERCODE", sUPPLIERCODE) :
                new ObjectParameter("SUPPLIERCODE", typeof(string));
    
            var sUPPLIERNAMEParameter = sUPPLIERNAME != null ?
                new ObjectParameter("SUPPLIERNAME", sUPPLIERNAME) :
                new ObjectParameter("SUPPLIERNAME", typeof(string));
    
            var mATERIALCODEParameter = mATERIALCODE != null ?
                new ObjectParameter("MATERIALCODE", mATERIALCODE) :
                new ObjectParameter("MATERIALCODE", typeof(string));
    
            var mATERIALDESCRIPTIONParameter = mATERIALDESCRIPTION != null ?
                new ObjectParameter("MATERIALDESCRIPTION", mATERIALDESCRIPTION) :
                new ObjectParameter("MATERIALDESCRIPTION", typeof(string));
    
            var rAWMATERIALParameter = rAWMATERIAL != null ?
                new ObjectParameter("RAWMATERIAL", rAWMATERIAL) :
                new ObjectParameter("RAWMATERIAL", typeof(string));
    
            var uOMParameter = uOM != null ?
                new ObjectParameter("UOM", uOM) :
                new ObjectParameter("UOM", typeof(string));
    
            var wIPParameter = wIP != null ?
                new ObjectParameter("WIP", wIP) :
                new ObjectParameter("WIP", typeof(string));
    
            var wIPUOMParameter = wIPUOM != null ?
                new ObjectParameter("WIPUOM", wIPUOM) :
                new ObjectParameter("WIPUOM", typeof(string));
    
            var fINISHGOODSParameter = fINISHGOODS != null ?
                new ObjectParameter("FINISHGOODS", fINISHGOODS) :
                new ObjectParameter("FINISHGOODS", typeof(string));
    
            var fINISHGOODSUOMParameter = fINISHGOODSUOM != null ?
                new ObjectParameter("FINISHGOODSUOM", fINISHGOODSUOM) :
                new ObjectParameter("FINISHGOODSUOM", typeof(string));
    
            var rEMARKParameter = rEMARK != null ?
                new ObjectParameter("REMARK", rEMARK) :
                new ObjectParameter("REMARK", typeof(string));
    
            var pODATEParameter = pODATE.HasValue ?
                new ObjectParameter("PODATE", pODATE) :
                new ObjectParameter("PODATE", typeof(System.DateTime));
    
            var cREATEDBYParameter = cREATEDBY != null ?
                new ObjectParameter("CREATEDBY", cREATEDBY) :
                new ObjectParameter("CREATEDBY", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SPStockUpload", pONOParameter, sUPPLIERCODEParameter, sUPPLIERNAMEParameter, mATERIALCODEParameter, mATERIALDESCRIPTIONParameter, rAWMATERIALParameter, uOMParameter, wIPParameter, wIPUOMParameter, fINISHGOODSParameter, fINISHGOODSUOMParameter, rEMARKParameter, pODATEParameter, cREATEDBYParameter);
        }
    
        public virtual ObjectResult<SUPP_Result> SUPP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SUPP_Result>("SUPP");
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetAllSuplierFourM(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetAllSuplierFourM", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetAllSuplierSMIR(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetAllSuplierSMIR", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierCapacity(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierCapacity", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierFornightTOP6(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierFornightTOP6", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierForUploadPackingBySupplier(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierForUploadPackingBySupplier", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierForUploadPackingStandard(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierForUploadPackingStandard", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierFourMTop3(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierFourMTop3", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierKITTOP3(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierKITTOP3", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierLineStoppage(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierLineStoppage", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierPPM(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierPPM", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierPreDispatch(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierPreDispatch", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierQM(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierQM", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierQuality(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierQuality", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierRating(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierRating", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierSMIRTop3(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierSMIRTop3", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierSourcing(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierSourcing", supplierNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Total_Count_GetSuplierWarranty(string supplierName)
        {
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Total_Count_GetSuplierWarranty", supplierNameParameter);
        }
    
        public virtual ObjectResult<usp_GetBuyerPOData_Result> usp_GetBuyerPOData(Nullable<int> currentPage, Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBuyerPOData_Result>("usp_GetBuyerPOData", currentPageParameter, tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual int usp_GetBuyerPOData_TotalCount(Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetBuyerPOData_TotalCount", tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<usp_GetBuyerPODetail_Result> usp_GetBuyerPODetail(string pO_NUM, Nullable<int> currentPage, Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var pO_NUMParameter = pO_NUM != null ?
                new ObjectParameter("PO_NUM", pO_NUM) :
                new ObjectParameter("PO_NUM", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBuyerPODetail_Result>("usp_GetBuyerPODetail", pO_NUMParameter, currentPageParameter, tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetBuyerPODetail_TotalCount(string pO_NUM, Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var pO_NUMParameter = pO_NUM != null ?
                new ObjectParameter("PO_NUM", pO_NUM) :
                new ObjectParameter("PO_NUM", typeof(string));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetBuyerPODetail_TotalCount", pO_NUMParameter, tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<Usp_GetGRNData_Result> Usp_GetGRNData(Nullable<int> currentPage, string supp_code, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supp_codeParameter = supp_code != null ?
                new ObjectParameter("Supp_code", supp_code) :
                new ObjectParameter("Supp_code", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetGRNData_Result>("Usp_GetGRNData", currentPageParameter, supp_codeParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Usp_GetGRNData_TotalCount(string supp_code, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var supp_codeParameter = supp_code != null ?
                new ObjectParameter("Supp_code", supp_code) :
                new ObjectParameter("Supp_code", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usp_GetGRNData_TotalCount", supp_codeParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<usp_GetInvoiceUpdateData_Result> usp_GetInvoiceUpdateData(string sUPP_CODE, Nullable<int> currentPage, string uploadDate, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var uploadDateParameter = uploadDate != null ?
                new ObjectParameter("UploadDate", uploadDate) :
                new ObjectParameter("UploadDate", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetInvoiceUpdateData_Result>("usp_GetInvoiceUpdateData", sUPP_CODEParameter, currentPageParameter, uploadDateParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual int usp_GetInvoiceUpdateData_27_05_2019(string sUPP_CODE, Nullable<int> currentPage, string uploadDate, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var uploadDateParameter = uploadDate != null ?
                new ObjectParameter("UploadDate", uploadDate) :
                new ObjectParameter("UploadDate", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetInvoiceUpdateData_27_05_2019", sUPP_CODEParameter, currentPageParameter, uploadDateParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual int usp_GetInvoiceUpdateData_TotalCount(string sUPP_CODE, string uploadDate, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var uploadDateParameter = uploadDate != null ?
                new ObjectParameter("UploadDate", uploadDate) :
                new ObjectParameter("UploadDate", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetInvoiceUpdateData_TotalCount", sUPP_CODEParameter, uploadDateParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual int usp_GetInvoiceUpdateData_TotalCount_07_05_2019(string sUPP_CODE, string uploadDate, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var uploadDateParameter = uploadDate != null ?
                new ObjectParameter("UploadDate", uploadDate) :
                new ObjectParameter("UploadDate", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetInvoiceUpdateData_TotalCount_07_05_2019", sUPP_CODEParameter, uploadDateParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<usp_GetMaterialData_Result> usp_GetMaterialData(Nullable<int> currentPage, string searchBy, string searchValue)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMaterialData_Result>("usp_GetMaterialData", currentPageParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetMaterialData_TotalCount(string searchBy, string searchValue)
        {
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetMaterialData_TotalCount", searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<Usp_GetMaterialRejectedData_Result> Usp_GetMaterialRejectedData(Nullable<int> currentPage, string supp_code, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var supp_codeParameter = supp_code != null ?
                new ObjectParameter("Supp_code", supp_code) :
                new ObjectParameter("Supp_code", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_GetMaterialRejectedData_Result>("Usp_GetMaterialRejectedData", currentPageParameter, supp_codeParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Usp_GetMaterialRejectedData_TotalCount(string supp_code, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var supp_codeParameter = supp_code != null ?
                new ObjectParameter("Supp_code", supp_code) :
                new ObjectParameter("Supp_code", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Usp_GetMaterialRejectedData_TotalCount", supp_codeParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<usp_GetSchedulerData_Result> usp_GetSchedulerData(string userType, Nullable<int> currentPage, Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchedulerData_Result>("usp_GetSchedulerData", userTypeParameter, currentPageParameter, tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual int usp_GetSchedulerData_TotalCount(string userType, Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSchedulerData_TotalCount", userTypeParameter, tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<usp_GetSchedulerDataBySuppCde_Result> usp_GetSchedulerDataBySuppCde(string sUPP_CODE, Nullable<int> currentPage, Nullable<int> tYPE, string uploadDate, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var uploadDateParameter = uploadDate != null ?
                new ObjectParameter("UploadDate", uploadDate) :
                new ObjectParameter("UploadDate", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSchedulerDataBySuppCde_Result>("usp_GetSchedulerDataBySuppCde", sUPP_CODEParameter, currentPageParameter, tYPEParameter, uploadDateParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual int usp_GetSchedulerDataBySuppCde_TotalCount(string sUPP_CODE, Nullable<int> tYPE, string uploadDate, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var uploadDateParameter = uploadDate != null ?
                new ObjectParameter("UploadDate", uploadDate) :
                new ObjectParameter("UploadDate", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSchedulerDataBySuppCde_TotalCount", sUPP_CODEParameter, tYPEParameter, uploadDateParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<usp_GetSupplierPOData_Result> usp_GetSupplierPOData(string sUPP_CODE, Nullable<int> currentPage, Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSupplierPOData_Result>("usp_GetSupplierPOData", sUPP_CODEParameter, currentPageParameter, tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual int usp_GetSupplierPOData_TotalCount(string sUPP_CODE, Nullable<int> tYPE, string fromDate, string toDate, string searchBy, string searchValue)
        {
            var sUPP_CODEParameter = sUPP_CODE != null ?
                new ObjectParameter("SUPP_CODE", sUPP_CODE) :
                new ObjectParameter("SUPP_CODE", typeof(string));
    
            var tYPEParameter = tYPE.HasValue ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var searchByParameter = searchBy != null ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSupplierPOData_TotalCount", sUPP_CODEParameter, tYPEParameter, fromDateParameter, toDateParameter, searchByParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<usp_GetUpdateInvoiceDataForMail_Result> usp_GetUpdateInvoiceDataForMail(string iNVOICE_NUMBER, string invoice_Date, string supp_Code)
        {
            var iNVOICE_NUMBERParameter = iNVOICE_NUMBER != null ?
                new ObjectParameter("INVOICE_NUMBER", iNVOICE_NUMBER) :
                new ObjectParameter("INVOICE_NUMBER", typeof(string));
    
            var invoice_DateParameter = invoice_Date != null ?
                new ObjectParameter("Invoice_Date", invoice_Date) :
                new ObjectParameter("Invoice_Date", typeof(string));
    
            var supp_CodeParameter = supp_Code != null ?
                new ObjectParameter("Supp_Code", supp_Code) :
                new ObjectParameter("Supp_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUpdateInvoiceDataForMail_Result>("usp_GetUpdateInvoiceDataForMail", iNVOICE_NUMBERParameter, invoice_DateParameter, supp_CodeParameter);
        }
    
        public virtual ObjectResult<usp_GetVendorAssocaitionData_Result> usp_GetVendorAssocaitionData(Nullable<int> currentPage)
        {
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVendorAssocaitionData_Result>("usp_GetVendorAssocaitionData", currentPageParameter);
        }
    
        public virtual ObjectResult<uspGenerateInvoice_Barcode_Result> uspGenerateInvoice_Barcode(string invoiceNo, string invoiceDate, string supp_Code, Nullable<int> currentPage)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var supp_CodeParameter = supp_Code != null ?
                new ObjectParameter("Supp_Code", supp_Code) :
                new ObjectParameter("Supp_Code", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGenerateInvoice_Barcode_Result>("uspGenerateInvoice_Barcode", invoiceNoParameter, invoiceDateParameter, supp_CodeParameter, currentPageParameter);
        }
    
        public virtual ObjectResult<uspGetInvoiceDetailFor_Buyer_Supplier_Result> uspGetInvoiceDetailFor_Buyer_Supplier(string invoiceNo, string invoiceDate, string supp_Code, Nullable<int> currentPage, string fromDate, string toDate)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var supp_CodeParameter = supp_Code != null ?
                new ObjectParameter("Supp_Code", supp_Code) :
                new ObjectParameter("Supp_Code", typeof(string));
    
            var currentPageParameter = currentPage.HasValue ?
                new ObjectParameter("CurrentPage", currentPage) :
                new ObjectParameter("CurrentPage", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetInvoiceDetailFor_Buyer_Supplier_Result>("uspGetInvoiceDetailFor_Buyer_Supplier", invoiceNoParameter, invoiceDateParameter, supp_CodeParameter, currentPageParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetInvoiceDetailFor_Buyer_Supplier_TotalCount(string invoiceNo, string invoiceDate, string supp_Code, string fromDate, string toDate)
        {
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var invoiceDateParameter = invoiceDate != null ?
                new ObjectParameter("InvoiceDate", invoiceDate) :
                new ObjectParameter("InvoiceDate", typeof(string));
    
            var supp_CodeParameter = supp_Code != null ?
                new ObjectParameter("Supp_Code", supp_Code) :
                new ObjectParameter("Supp_Code", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetInvoiceDetailFor_Buyer_Supplier_TotalCount", invoiceNoParameter, invoiceDateParameter, supp_CodeParameter, fromDateParameter, toDateParameter);
        }
    }
}
